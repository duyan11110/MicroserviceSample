// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Sample.CustomerService.EntityFrameworkCore;
using Volo.Abp.EntityFrameworkCore;

#nullable disable

namespace Sample.CustomerService.Migrations
{
    [DbContext(typeof(CustomerServiceDbContext))]
    partial class CustomerServiceDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("_Abp_DatabaseProvider", EfCoreDatabaseProvider.SqlServer)
                .HasAnnotation("ProductVersion", "7.0.1")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Sample.CustomerService.Customers.Customer", b =>
                {
                    b.Property<int>("CustomerID")
                        .HasColumnType("int");

                    b.Property<string>("Address")
                        .HasMaxLength(70)
                        .IsUnicode(false)
                        .HasColumnType("varchar(70)");

                    b.Property<int>("CompanyID")
                        .HasColumnType("int");

                    b.Property<string>("CustomerAbbr")
                        .IsRequired()
                        .HasMaxLength(12)
                        .IsUnicode(false)
                        .HasColumnType("varchar(12)");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(40)
                        .IsUnicode(false)
                        .HasColumnType("varchar(40)");

                    b.Property<string>("Fax")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)");

                    b.Property<string>("LicenseNumber")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.Property<string>("PassportNo")
                        .HasMaxLength(30)
                        .IsUnicode(false)
                        .HasColumnType("varchar(30)");

                    b.HasKey("CustomerID")
                        .HasName("pk_tCIM_Customer_ID");

                    b.HasIndex(new[] { "CompanyID" }, "IX_tCIM_Customer_CompanyID");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "CompanyID" }, "IX_tCIM_Customer_CompanyID"), 80);

                    b.HasIndex(new[] { "CustomerAbbr" }, "ix_tCIM_Customer_CustomerAbrr");

                    SqlServerIndexBuilderExtensions.HasFillFactor(b.HasIndex(new[] { "CustomerAbbr" }, "ix_tCIM_Customer_CustomerAbrr"), 80);

                    b.ToTable("tCIM_Customer", (string)null);
                });
#pragma warning restore 612, 618
        }
    }
}
